[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "INTRODUCTION TO DIGITAL MUSICOLOGY",
    "section": "",
    "text": "Preface\nThis page contains material for the course Introduction to Digital Musicology, held at Julius-Maximilians-Universität, Würzburg (Germany) in Fall 2025.\n\n\n\n\n\n\nWarning\n\n\n\nThis is work in progress.\n\n\nTest citation Knuth (1984).\n\n\n\n\nKnuth, Donald E. 1984. “Literate Programming.” Comput. J. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "01_what_is_dm.html",
    "href": "01_what_is_dm.html",
    "title": "1  What is Digital Musicology?",
    "section": "",
    "text": "Introduction and terminology\n\n\n\n\n\n\nGoal\n\n\n\nUnderstanding what “digital musicology” means.\n\n\n\nIntroduction\nOverview of the field\nTerminology\n\ne.g. digital vs computational; the latter in 2nd semester\ndigital vs empirical vs quantiative\nhow does DM relate to “traditional” subdivisions of musicology?\n\n\n\n\n\n\n\n\nExercise\n\n\n\nRead.",
    "crumbs": [
      "INTRODUCTION",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>What is Digital Musicology?</span>"
    ]
  },
  {
    "objectID": "02_dm_today.html",
    "href": "02_dm_today.html",
    "title": "2  Digital Musicology today",
    "section": "",
    "text": "Goal\n\n\n\nAcquiring and overview of current activities in Digital Musicology.\n\n\n\nCurrent research topics\nImportant institutions and people (also, e.g. NFDI4Culture)\nCentral journals and conferences",
    "crumbs": [
      "INTRODUCTION",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Digital Musicology today</span>"
    ]
  },
  {
    "objectID": "03_history_of_dm.html",
    "href": "03_history_of_dm.html",
    "title": "3  The history of Digital Musicology",
    "section": "",
    "text": "Goal\n\n\n\nKnowing the beginnings and the major stages of DM.",
    "crumbs": [
      "INTRODUCTION",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>The history of Digital Musicology</span>"
    ]
  },
  {
    "objectID": "04_RISM.html",
    "href": "04_RISM.html",
    "title": "4  RISM metadata",
    "section": "",
    "text": "Goal\n\n\n\nLearn what metadata are and how to search for music sources on RISM Online.\n\n\n\nWhat is RISM?\nWhat is RISM Online?\n\n\n\n\n\n\n\nExercise\n\n\n\nUnderstand basic SPARQL and design queries via prompting.",
    "crumbs": [
      "DATA ABOUT MUSIC",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>RISM metadata</span>"
    ]
  },
  {
    "objectID": "05_spotify_musicbrainz.html",
    "href": "05_spotify_musicbrainz.html",
    "title": "5  Spotify and MusicBrainz metadata",
    "section": "",
    "text": "Goal\n\n\n\nUnderstand the kind of metadata provided by Spotify vs MusicBrainz.",
    "crumbs": [
      "DATA ABOUT MUSIC",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Spotify and MusicBrainz metadata</span>"
    ]
  },
  {
    "objectID": "06_streaming_industry.html",
    "href": "06_streaming_industry.html",
    "title": "6  Music and the streaming industry",
    "section": "",
    "text": "Goal\n\n\n\nGain first insights into the music market and its workings.\n\n\n\n\n\n\n\n\nExercise\n\n\n\nWork with sales data.",
    "crumbs": [
      "DATA ABOUT MUSIC",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Music and the streaming industry</span>"
    ]
  },
  {
    "objectID": "07_audio.html",
    "href": "07_audio.html",
    "title": "7  Audio",
    "section": "",
    "text": "Goal\n\n\n\nUnderstand what an audio signal is and how it is represented digitally .\n\n\n\nWaveform to spectrogram\nHarmonics\nTimbre\nAudible range and volume\nreading melodies from a spectrogram\ndigital audio: sampling",
    "crumbs": [
      "MUSIC AS DATA",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Audio</span>"
    ]
  },
  {
    "objectID": "08_MIDI.html",
    "href": "08_MIDI.html",
    "title": "8  MIDI",
    "section": "",
    "text": "Goal\n\n\n\nBe able to name use cases for MIDI. Translate MIDI numbers to pitches.",
    "crumbs": [
      "MUSIC AS DATA",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>MIDI</span>"
    ]
  },
  {
    "objectID": "09_MEI_header.html",
    "href": "09_MEI_header.html",
    "title": "9  MEI - header",
    "section": "",
    "text": "Goal\n\n\n\nUnderstand basic XML encoding and the skeleton structure of MEI.\n\n\n\nmei friend",
    "crumbs": [
      "MUSIC AS DATA",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>MEI - header</span>"
    ]
  },
  {
    "objectID": "10_MEI_body.html",
    "href": "10_MEI_body.html",
    "title": "10  MEI - the body",
    "section": "",
    "text": "Goal\n\n\n\nUnderstand the relation between CWMN and the MEI music element.\n\n\n\nMuseScore export\nmei friend",
    "crumbs": [
      "MUSIC AS DATA",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>MEI - the body</span>"
    ]
  },
  {
    "objectID": "11_dma_harmony.html",
    "href": "11_dma_harmony.html",
    "title": "11  Digital music analysis: harmony",
    "section": "",
    "text": "Goal\n\n\n\nUnderstand what labeling is and why labels can be useful.\n\n\n\nfurther MuseScore practice\nsegmentation and labeling\nCounting chords, finding cadences",
    "crumbs": [
      "WORKING WITH MUSIC DATA",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Digital music analysis: harmony</span>"
    ]
  },
  {
    "objectID": "12_dma_melody.html",
    "href": "12_dma_melody.html",
    "title": "12  Digital music analysis: melody",
    "section": "",
    "text": "Goal\n\n\n\nUnderstand how melodic pattern matching works in principle.\n\n\n\nPattern finding in melodies (Non-Western)",
    "crumbs": [
      "WORKING WITH MUSIC DATA",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Digital music analysis: melody</span>"
    ]
  },
  {
    "objectID": "13_copyright.html",
    "href": "13_copyright.html",
    "title": "13  Copyright",
    "section": "",
    "text": "Goal\n\n\n\nKnow a few famous copyright infringement cases and why data analysis is important here.\n\n\n\nPlagiarism cases and copyright",
    "crumbs": [
      "CRITICAL DIGITAL MUSICOLOGY",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Copyright</span>"
    ]
  },
  {
    "objectID": "14_representation.html",
    "href": "14_representation.html",
    "title": "14  Representation and representativeness",
    "section": "",
    "text": "Goal\n\n\n\nUnderstand the difference between representativeness and representation. Obtain a critical understanding of biases relevant for data selection.\n\n\n\nRepresentation and the canon\nRepresenting means modeling means abstraction (what is “music” in “music encoding”?)\nbiases: how to recognize them, how to deal with them, and when biases are a good thing.\nFAIR and CARE",
    "crumbs": [
      "CRITICAL DIGITAL MUSICOLOGY",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Representation and representativeness</span>"
    ]
  },
  {
    "objectID": "15_discussion.html",
    "href": "15_discussion.html",
    "title": "15  Discussion",
    "section": "",
    "text": "Goal",
    "crumbs": [
      "CRITICAL DIGITAL MUSICOLOGY",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Discussion</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Knuth, Donald E. 1984. “Literate Programming.” Comput.\nJ. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97.",
    "crumbs": [
      "References"
    ]
  },
  {
    "objectID": "data/billboard_charts.html",
    "href": "data/billboard_charts.html",
    "title": "7  https://www.kaggle.com/datasets/dhruvildave/billboard-the-hot-100-songs",
    "section": "",
    "text": "import pandas as pd\n\n\ndf = pd.read_csv(\"charts.csv\")\n\n\ndf.date.min(), df.date.max()\n\n('1958-08-04', '2021-11-06')\n\n\n\n# Top artists\ndf.artist.value_counts()\n\nTaylor Swift                                      1023\nElton John                                         889\nMadonna                                            857\nDrake                                              787\nKenny Chesney                                      769\n                                                  ... \nRiceGum Featuring Alissa Violet                      1\nXXXTENTACION Featuring PnB Rock & Trippie Redd       1\nJustin Bieber Featuring Burna Boy                    1\nJustin Bieber Featuring BEAM                         1\nFrankie Vaughan                                      1\nName: artist, Length: 10205, dtype: int64\n\n\n\n# Longest in charts\ndf.sort_values(by=\"weeks-on-board\", ascending=True).iloc[50_000:]\n\n\n\n\n\n\n\n\ndate\nrank\nsong\nartist\nlast-week\npeak-rank\nweeks-on-board\n\n\n\n\n259625\n1972-02-05\n39\nMy World\nBee Gees\n65.0\n39\n2\n\n\n259626\n1972-02-05\n40\nEverything I Own\nBread\n60.0\n40\n2\n\n\n17466\n2018-07-07\n67\nBed\nNicki Minaj Featuring Ariana Grande\n43.0\n43\n2\n\n\n260181\n1972-01-01\n95\nDo The Funky Penguin Part I\nRufus Thomas\n97.0\n95\n2\n\n\n259676\n1972-02-05\n90\nRunaway/Happy Together\nDawn Featuring Tony Orlando\n99.0\n90\n2\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n1215\n2021-08-14\n16\nBlinding Lights\nThe Weeknd\n17.0\n1\n87\n\n\n39148\n2014-05-10\n49\nRadioactive\nImagine Dragons\n48.0\n3\n87\n\n\n1117\n2021-08-21\n18\nBlinding Lights\nThe Weeknd\n16.0\n1\n88\n\n\n1020\n2021-08-28\n21\nBlinding Lights\nThe Weeknd\n18.0\n1\n89\n\n\n919\n2021-09-04\n20\nBlinding Lights\nThe Weeknd\n21.0\n1\n90\n\n\n\n\n280087 rows × 7 columns\n\n\n\n\ndf[\"date\"] = pd.to_datetime(df[\"date\"])\n\n\ndf[df.artist==\"Drake\"].song.value_counts()\n\nGod's Plan                36\nHotline Bling             36\nControlla                 26\nNice For What             25\nHeadlines                 25\n                          ..\nFrom Florida With Love     1\nLanded                     1\nWhen To Say When           1\nDeep Pockets               1\nFinal Fantasy              1\nName: song, Length: 108, dtype: int64\n\n\n\ndf[df.artist==\"Elton John\"].song.value_counts()\n\nCandle In The Wind 1997/Something About The Way You Look Tonight               42\nCan You Feel The Love Tonight (From \"The Lion King\")                           26\nI Guess That's Why They Call It The Blues                                      23\nThe One                                                                        22\nCandle In The Wind                                                             21\nLittle Jeannie                                                                 21\nBlessed                                                                        20\nBelieve                                                                        20\nCircle Of Life (From \"The Lion King\")                                          20\nThe Last Song                                                                  20\nRecover Your Soul                                                              20\nSad Songs (say So Much)                                                        19\nI Don't Wanna Go On With You Like That                                         18\nMama Can't Buy You Love                                                        18\nNikita                                                                         18\nBennie And The Jets                                                            18\nBlue Eyes                                                                      18\nEmpty Garden (Hey Hey Johnny)                                                  17\nGoodbye Yellow Brick Road                                                      17\nCrocodile Rock                                                                 17\nYou Can Make History (Young Again)                                             17\nSacrifice                                                                      17\nClub At The End Of The Street                                                  16\nSimple Life                                                                    16\nI'm Still Standing                                                             16\nDaniel                                                                         15\nDon't Let The Sun Go Down On Me                                                15\nIsland Girl                                                                    15\nRocket Man                                                                     15\nSomeday Out Of The Blue                                                        15\nHealing Hands                                                                  15\nThe Bitch Is Back                                                              14\nYour Song                                                                      14\nWho Wears These Shoes?                                                         14\nWrap Her Up                                                                    14\nSorry Seems To Be The Hardest Word                                             14\nLucy In The Sky With Diamonds                                                  14\nSomeone Saved My Life Tonight                                                  13\nYou Gotta Love Someone                                                         13\nA Word In Spanish                                                              13\nNobody Wins                                                                    13\nChloe                                                                          13\nIn Neon                                                                        13\nSaturday Night's Alright For Fighting                                          12\nKiss The Bride                                                                 12\n(Sartorial Eloquence) Don't Ya Wanna Play This Game No More?                   12\nGrow Some Funk Of Your Own/I Feel Like A Bullet (In The Gun Of Robert Ford)    11\nPart-Time Love                                                                 10\nVictim Of Love                                                                 10\nHonky Cat                                                                      10\nMade In England                                                                10\nLevon                                                                          10\nFriends                                                                         9\nEgo                                                                             8\nHeartache All Over The World                                                    8\nTiny Dancer                                                                     7\nBite Your Lip (Get up and dance!)                                               6\nBorder Song                                                                     5\nName: song, dtype: int64\n\n\n\ndef chart_performance(artist, song):\n    data = df[(df[\"artist\"] == artist) & (df[\"song\"] == song)]\n    data = data.sort_values(by=\"date\").reset_index(drop=True)\n    data[\"date_rel\"] = pd.to_timedelta(data[\"date\"] - data[\"date\"][0]).dt.days\n    return data\n\n\ntest_cases = {\n    \"Taylor Swift\": \"You Belong With Me\",\n    \"Drake\": \"God's Plan\",\n    \"Elton John\": \"Candle In The Wind 1997/Something About The Way You Look Tonight\",\n    \"The Weeknd\": \"Blinding Lights\",\n    \"Elvis Presley\": \"Please Don't Stop Loving Me\"\n}\n\n\ntaylor = chart_performance(\"Taylor Swift\", \"You Belong With Me\")\ndrake = chart_performance(\"Drake\", \"God's Plan\")\nelton = chart_performance(\"Elton John\", \"Candle In The Wind 1997/Something About The Way You Look Tonight\")\nweeknd = chart_performance(\"The Weeknd\", \"Blinding Lights\")\nelvis = chart_performance(\"Elvis Presley\", \"Please Don't Stop Loving Me\")\n\n\nimport matplotlib.pyplot as plt\n\n\n_, ax = plt.subplots(figsize=(15,4))\n\nfor artist, song in test_cases.items():\n    data = chart_performance(artist, song)\n    x = data[\"date\"].values\n    y = data[\"rank\"].values\n\n    ax.plot(x, y, marker=\".\", label=f\"{song} ({artist})\")\n\nplt.gca().invert_yaxis()\nplt.legend()\nplt.show()\n\n\n\n\n\n\n\n\n\n_, ax = plt.subplots(figsize=(15,4))\n\nfor artist, song in test_cases.items():\n    data = chart_performance(artist, song)\n    x = data[\"date_rel\"].values\n    y = data[\"rank\"].values\n\n    ax.plot(x, y, marker=\".\", label=f\"{song} ({artist})\")\n\nplt.gca().invert_yaxis()\nplt.legend()\nplt.show()\n\n\n\n\n\n\n\n\n\n# TODO: remove lines for missing weeks (gaps in curves)\n# add two cases:\n#  - short duration but high peak\n#  - long duration but low peak\n\n\n# Q: can we predict a song's survival using the features given in the data?\n# --&gt; at least introduce notion of training/test data and discuss the epistemological problem of using 'all' historical \n# sources for explanation\n\n\n# Try other data: https://www.kaggle.com/datasets/thedevastator/billboard-hot-100-audio-features\n\n\ndf_charts = pd.read_csv(\"Hot Stuff.csv\", index_col=0)\ndf_charts[\"WeekID\"] = pd.to_datetime(df_charts[\"WeekID\"])\n\n\ndf_charts.head()\n\n\n\n\n\n\n\n\nurl\nWeekID\nWeek Position\nSong\nPerformer\nSongID\nInstance\nPrevious Week Position\nPeak Position\nWeeks on Chart\n\n\nindex\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0\nhttp://www.billboard.com/charts/hot-100/1965-0...\n1965-07-17\n34\nDon't Just Stand There\nPatty Duke\nDon't Just Stand TherePatty Duke\n1\n45.0\n34\n4\n\n\n1\nhttp://www.billboard.com/charts/hot-100/1965-0...\n1965-07-24\n22\nDon't Just Stand There\nPatty Duke\nDon't Just Stand TherePatty Duke\n1\n34.0\n22\n5\n\n\n2\nhttp://www.billboard.com/charts/hot-100/1965-0...\n1965-07-31\n14\nDon't Just Stand There\nPatty Duke\nDon't Just Stand TherePatty Duke\n1\n22.0\n14\n6\n\n\n3\nhttp://www.billboard.com/charts/hot-100/1965-0...\n1965-08-07\n10\nDon't Just Stand There\nPatty Duke\nDon't Just Stand TherePatty Duke\n1\n14.0\n10\n7\n\n\n4\nhttp://www.billboard.com/charts/hot-100/1965-0...\n1965-08-14\n8\nDon't Just Stand There\nPatty Duke\nDon't Just Stand TherePatty Duke\n1\n10.0\n8\n8\n\n\n\n\n\n\n\n\ndf_audio = pd.read_csv(\"Hot 100 Audio Features.csv\", index_col=0)\n\n\ndf_audio.head()\n\n\n\n\n\n\n\n\nSongID\nPerformer\nSong\nspotify_genre\nspotify_track_id\nspotify_track_preview_url\nspotify_track_duration_ms\nspotify_track_explicit\nspotify_track_album\ndanceability\n...\nloudness\nmode\nspeechiness\nacousticness\ninstrumentalness\nliveness\nvalence\ntempo\ntime_signature\nspotify_track_popularity\n\n\nindex\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0\n-twistin'-White Silver SandsBill Black's Combo\nBill Black's Combo\n-twistin'-White Silver Sands\n[]\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1\n¿Dònde Està Santa Claus? (Where Is Santa Claus...\nAugie Rios\n¿Dònde Està Santa Claus? (Where Is Santa Claus?)\n['novelty']\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n2\n......And Roses And RosesAndy Williams\nAndy Williams\n......And Roses And Roses\n['adult standards', 'brill building pop', 'eas...\n3tvqPPpXyIgKrm4PR9HCf0\nhttps://p.scdn.co/mp3-preview/cef4883cfd1e0e53...\n166106.0\nFalse\nThe Essential Andy Williams\n0.154\n...\n-14.063\n1.0\n0.0315\n0.91100\n0.000267\n0.112\n0.150\n83.969\n4.0\n38.0\n\n\n3\n...And Then There Were DrumsSandy Nelson\nSandy Nelson\n...And Then There Were Drums\n['rock-and-roll', 'space age pop', 'surf music']\n1fHHq3qHU8wpRKHzhojZ4a\nNaN\n172066.0\nFalse\nCompelling Percussion\n0.588\n...\n-17.278\n0.0\n0.0361\n0.00256\n0.745000\n0.145\n0.801\n121.962\n4.0\n11.0\n\n\n4\n...Baby One More TimeBritney Spears\nBritney Spears\n...Baby One More Time\n['dance pop', 'pop', 'post-teen pop']\n3MjUtNVVq3C8Fn0MP3zhXa\nhttps://p.scdn.co/mp3-preview/da2134a161f1cb34...\n211066.0\nFalse\n...Baby One More Time (Digital Deluxe Version)\n0.759\n...\n-5.745\n0.0\n0.0307\n0.20200\n0.000131\n0.443\n0.907\n92.960\n4.0\n77.0\n\n\n\n\n5 rows × 22 columns\n\n\n\n\nd = df_charts.merge(df_audio)\n\n\nd.shape\n\n(330208, 29)\n\n\n\nd[\"WeekID\"] = pd.to_datetime(d[\"WeekID\"])\n\n\nd.sample(10)\n\n\n\n\n\n\n\n\nurl\nWeekID\nWeek Position\nSong\nPerformer\nSongID\nInstance\nPrevious Week Position\nPeak Position\nWeeks on Chart\n...\nloudness\nmode\nspeechiness\nacousticness\ninstrumentalness\nliveness\nvalence\ntempo\ntime_signature\nspotify_track_popularity\n\n\n\n\n95610\nhttp://www.billboard.com/charts/hot-100/1995-0...\n1995-06-10\n95\nSecret Garden\nBruce Springsteen\nSecret GardenBruce Springsteen\n1\n76.0\n63\n7\n...\n-16.560\n1.0\n0.0266\n0.4940\n0.099900\n0.1170\n0.131\n86.830\n4.0\n62.0\n\n\n71803\nhttp://www.billboard.com/charts/hot-100/1998-0...\n1998-06-20\n6\nEverybody [Backstreet's Back]\nBackstreet Boys\nEverybody [Backstreet's Back]Backstreet Boys\n1\n6.0\n4\n10\n...\n-3.493\n0.0\n0.0402\n0.0250\n0.000003\n0.2650\n0.586\n108.021\n4.0\n63.0\n\n\n245085\nhttp://www.billboard.com/charts/hot-100/1965-1...\n1965-11-20\n27\nMake Me Your Baby\nBarbara Lewis\nMake Me Your BabyBarbara Lewis\n1\n19.0\n11\n11\n...\n-15.879\n1.0\n0.0402\n0.7010\n0.000058\n0.6710\n0.649\n110.040\n4.0\n28.0\n\n\n9320\nhttps://www.billboard.com/charts/hot-100/2020-...\n2020-09-19\n72\n7 Summers\nMorgan Wallen\n7 SummersMorgan Wallen\n1\n56.0\n6\n4\n...\n-5.130\n1.0\n0.0328\n0.4170\n0.000061\n0.1250\n0.571\n203.903\n4.0\n75.0\n\n\n120792\nhttp://www.billboard.com/charts/hot-100/1969-1...\n1969-10-25\n8\nBaby It's You\nSmith\nBaby It's YouSmith\n1\n13.0\n8\n8\n...\n-10.648\n0.0\n0.0304\n0.0177\n0.071200\n0.2600\n0.694\n95.398\n4.0\n45.0\n\n\n139253\nhttp://www.billboard.com/charts/hot-100/2004-1...\n2004-10-30\n73\nFlap Your Wings\nNelly\nFlap Your WingsNelly\n1\n66.0\n52\n9\n...\n-3.975\n1.0\n0.0617\n0.0246\n0.000001\n0.0874\n0.858\n105.623\n4.0\n43.0\n\n\n308885\nhttp://www.billboard.com/charts/hot-100/1975-0...\n1975-01-04\n69\nWhatever You Got, I Want\nJackson 5\nWhatever You Got, I WantJackson 5\n1\n60.0\n38\n11\n...\n-6.994\n0.0\n0.0547\n0.2550\n0.000000\n0.0792\n0.928\n76.892\n4.0\n21.0\n\n\n231557\nhttp://www.billboard.com/charts/hot-100/2006-0...\n2006-09-30\n34\nHate Me\nBlue October\nHate MeBlue October\n1\n34.0\n32\n23\n...\n-5.724\n0.0\n0.0356\n0.5130\n0.000000\n0.0980\n0.202\n92.166\n4.0\n59.0\n\n\n232458\nhttp://www.billboard.com/charts/hot-100/1966-0...\n1966-05-14\n89\nIt's Over\nJimmie Rodgers\nIt's OverJimmie Rodgers\n1\nNaN\n89\n1\n...\n-24.218\n1.0\n0.0311\n0.9180\n0.000120\n0.1510\n0.603\n95.650\n4.0\n6.0\n\n\n16052\nhttps://www.billboard.com/charts/hot-100/2019-...\n2019-01-05\n70\nBreak Da Law\n21 Savage\nBreak Da Law21 Savage\n1\nNaN\n70\n1\n...\n-7.823\n1.0\n0.3460\n0.0493\n0.000000\n0.2560\n0.359\n141.039\n4.0\n61.0\n\n\n\n\n10 rows × 29 columns\n\n\n\n\n## BOOTSTRAP!\n\n# d = d.sample(500_000, replace=True)\n\n\nd.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nInt64Index: 330208 entries, 0 to 330207\nData columns (total 29 columns):\n #   Column                     Non-Null Count   Dtype         \n---  ------                     --------------   -----         \n 0   url                        330208 non-null  object        \n 1   WeekID                     330208 non-null  datetime64[ns]\n 2   Week Position              330208 non-null  int64         \n 3   Song                       330208 non-null  object        \n 4   Performer                  330208 non-null  object        \n 5   SongID                     330208 non-null  object        \n 6   Instance                   330208 non-null  int64         \n 7   Previous Week Position     298048 non-null  float64       \n 8   Peak Position              330208 non-null  int64         \n 9   Weeks on Chart             330208 non-null  int64         \n 10  spotify_genre              315700 non-null  object        \n 11  spotify_track_id           287066 non-null  object        \n 12  spotify_track_preview_url  169915 non-null  object        \n 13  spotify_track_duration_ms  287066 non-null  float64       \n 14  spotify_track_explicit     287066 non-null  object        \n 15  spotify_track_album        287004 non-null  object        \n 16  danceability               286508 non-null  float64       \n 17  energy                     286508 non-null  float64       \n 18  key                        286508 non-null  float64       \n 19  loudness                   286508 non-null  float64       \n 20  mode                       286508 non-null  float64       \n 21  speechiness                286508 non-null  float64       \n 22  acousticness               286508 non-null  float64       \n 23  instrumentalness           286508 non-null  float64       \n 24  liveness                   286508 non-null  float64       \n 25  valence                    286508 non-null  float64       \n 26  tempo                      286508 non-null  float64       \n 27  time_signature             286508 non-null  float64       \n 28  spotify_track_popularity   287066 non-null  float64       \ndtypes: datetime64[ns](1), float64(15), int64(4), object(9)\nmemory usage: 75.6+ MB\n\n\n\nfrom IPython.display import Audio, HTML\n\n\nAudio(url=d.loc[1000,\"spotify_track_preview_url\"])\n\n\n                \n                    \n                    Your browser does not support the audio element.\n                \n              \n\n\n\ndef curves(performer, song):\n    data = d[(d.Performer == performer) & (d.Song == song)].sort_values(by=\"WeekID\").reset_index(drop=True)\n    data[\"date_rel\"] = pd.to_timedelta(data[\"WeekID\"] - data[\"WeekID\"][0]).dt.days\n    x = data[\"date_rel\"].values # or date_rel or WeekID\n    y = data[\"Week Position\"].values\n    return x,y\n\n\ntest_cases2 = {\n    \"Patty Duke\": \"Don't Just Stand There\",\n    \"Ace Of Base\": \"Don't Turn Around\",\n    \"Dan + Shay\": \"Speechless\",\n    \"YoungBloodZ Featuring Lil Jon\": \"Damn!\",\n    \"K-Ci & JoJo\": \"All My Life\",\n    \"Trevor Daniel\": \"Falling\"\n}\n\n\n_, ax = plt.subplots(figsize=(15,4))\n\nfor performer, song in test_cases2.items():\n    x,y = curves(performer, song)\n    ax.plot(x, y, marker=\".\", label=f\"{song} ({performer})\")\n\nplt.gca().invert_yaxis()\nplt.legend()\nplt.show()\n\n\n\n\n\n\n\n\nModeling the life of a song in the Top 100:\nWe assume that once a song has left the Top 100, it is impossible to re-enter (even though that does happen, of course)\n\nEach song has a starting rank \\(r_0\\).\nFor each following week, there is a bernoulli dropout probability \\(\\theta\\) that determines whether a song remains in the charts.\n\n\n\n# Observation: Genres tend to leave the Top 100 higher than they entered them\n\n\nentrances = []\npeaks = []\nexits = []\n\nfor _, group in d.groupby(\"SongID\"):\n    weeks = group.sort_values(by=\"WeekID\")[\"Week Position\"].values\n    entrances.append(weeks[0])\n    peaks.append(weeks.min())\n    exits.append(weeks[-1])\n\n\nimport numpy as np\n\n\n# from matplotlib.collections import LineCollection\n\n\n_, ax = plt.subplots(figsize=(10,4))\n\nK = len(entrances) + 1\n\nfor a, b, c in zip(entrances[:K], peaks[:K], exits[:K]):\n    if a != b != c: # remove constants\n        ax.plot([0, 1, 2], [a, b, c], c=\"k\", lw=.5, alpha=.01)\n\nplt.xlim(0,2)\nplt.ylim(0,100)\nplt.gca().invert_yaxis() # smaller is better\nplt.savefig(\"img/rise-decline.png\", dpi=600)\nplt.show()\n\n\n\n\n\n\n\n\nOBSERVATION: At least 3 types:\n\nconstants\nlow in, peak, low out\nlow in, peak, mid out\n\nTry to disentangle what causes the difference",
    "crumbs": [
      "DATA ABOUT MUSIC",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>billboard_charts.html</span>"
    ]
  }
]